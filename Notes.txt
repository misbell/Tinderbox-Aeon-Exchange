
first things first, load the files into text views

outline views next probably, one step at a time.

init with a tinderbox doc in the cloud
init with an aeon doc in the cloud
init with a scrivener doc in the cloud

add a tinderbox doc to a TASC doc
add an aeon doc to a TASC doc
add a scrivener doc to a TASC doc

get a tinderbox doc to local from a TASC doc
get an aeon doc to local from a TASC doc
get a scrivener doc to local from a TASC doc


=========

view a TASC doc's data

http://dubinski.org/wpis/easy-xml-parsing-in-swift/

thought, make nsxmlparser an extension, not a protocol

https://github.com/matteocrippa/awesome-swift

https://github.com/Wolg/awesome-swift

https://github.com/vsouza/awesome-ios

https://github.com/trending?l=swift

review the photos from brooklyn swift thing
ash furrow

http://stackoverflow.com/questions/24581517/read-a-file-url-line-by-line-in-swift


http://airspeedvelocity.net

read file from url code
https://gist.github.com/ericdke/f13a4b4d3f9d53127711



let file = "file.txt"

if let dirs : [String] = NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory.DocumentDirectory, NSSearchPathDomainMask.AllDomainsMask, true) as? [String] {
let dir = dirs[0] //documents directory
let path = dir.stringByAppendingPathComponent(file);
let text = "some text"

//writing
text.writeToFile(path, atomically: false, encoding: NSUTF8StringEncoding, error: nil);

//reading
let text2 = String(contentsOfFile: path, encoding: NSUTF8StringEncoding, error: nil)
}
